(require 'package)
(let* ((no-ssl (and (memq system-type '(windows-nt ms-dos))
                    (not (gnutls-available-p))))
       (proto (if no-ssl "http" "https")))
  (when no-ssl (warn "\
Your version of Emacs does not support SSL connections,
which is unsafe because it allows man-in-the-middle attacks.
There are two things you can do about this warning:
1. Install an Emacs version that does support SSL and be safe.
2. Remove this warning from your init file so you won't see it again."))
  (add-to-list 'package-archives (cons "melpa" (concat proto "://melpa.org/packages/")) t)
  ;; Comment/uncomment this line to enable MELPA Stable if desired.  See `package-archive-priorities`
  ;; and `package-pinned-packages`. Most users will not need or want to do this.
  ;;(add-to-list 'package-archives (cons "melpa-stable" (concat proto "://stable.melpa.org/packages/")) t)
  )
(package-initialize)


;;; ELISP LANGUAGE EXTENSIONS

;; Enable lexical binding.
(setq lexical-binding t)

;;; ELISP config vars

(setq local-projects-path "~/quicklisp/local-projects")

;; Disable Emacs welcome buffer on startup.
(setq inhibit-startup-message t)

;; Don't create 'backup' files.
(setq make-backup-files nil)
(setq auto-save-default nil)
(setq create-lockfiles nil)

;; Set yes or no prompt with answer y/n.
(defalias 'yes-or-no-p 'y-or-n-p)

;; Pair parentheses and other characters combination.
;; Also highlight parentheses.
(electric-pair-mode)
(show-paren-mode t)
(global-whitespace-mode 1)

;; Use space instead of tab.
(setq-default indent-tabs-mode nil)

;; C/C++
(setq-default c-basic-offset 8)
(setq-default c-default-style "linux")

;; Highlight characters beyond than 80th column
;; for consistency guideline.
(setq-default whitespace-line-column
              80
              whitespace-style
              '(face lines-tail))

;; Make line number mode (horizontal)
;; and column number mode (vertical)
;; default for every file.
(global-linum-mode t)
(column-number-mode t)
(global-auto-complete-mode t)
(nyan-mode)

(require 'smex)
(smex-initialize)

;;; LITERATURE PROGRAMMING.
(org-babel-do-load-languages
 'org-babel-load-languages
 '((lisp . t)))

;;; KEY SHORTCUTS

(global-set-key (kbd "C-x u") 'windmove-up)
(global-set-key (kbd "C-x d") 'windmove-down)
(global-set-key (kbd "C-x p") 'windmove-left)
(global-set-key (kbd "C-x n") 'windmove-right)
(global-set-key (kbd "S-C-p") 'shrink-window-horizontally)
(global-set-key (kbd "S-C-n") 'enlarge-window-horizontally)
(global-set-key (kbd "S-C-u") 'enlarge-window)
(global-set-key (kbd "S-C-d") 'shrink-window)
(global-set-key (kbd "S-C-k") 'kill-buffer-and-window)
(global-set-key (kbd "S-C-r") 'read-only-mode)
(global-set-key (kbd "M-x") 'smex)
(global-set-key (kbd "M-X") 'smex-major-mode-commands)

;; This is your old M-x.
(global-set-key (kbd "C-c C-c M-x") 'execute-extended-command)

(load (expand-file-name "~/quicklisp/slime-helper.el"))
;;(load (expand-file-name "~/.roswell/helper.el"))
;; Replace "sbcl" with the path to your implementation.
;;(setq inferior-lisp-program "ros -Q run")
(setq inferior-lisp-program "sbcl")
(slime-setup '(slime-fancy slime-company))
(load-theme 'material t)

(defun terminal ()
  (interactive)
  (split-window-below)
  (windmove-down)
  (ansi-term "/bin/bash" "Terminal"))

(defun destroy-terminal ()
  (interactive)
  (kill-buffer)
  (delete-window))

(global-set-key (kbd "C-x t") 'terminal)
(global-set-key (kbd "C-x C-t") 'destroy-terminal)
